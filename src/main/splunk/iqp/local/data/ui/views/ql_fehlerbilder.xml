<form script="qlearning/js/db_ql_fehlerbilder.js" stylesheet="qlearning/css/db_ql_fehlerbilder.css">
  <init>
    <!--<set token="spectral_val">5</set>
    <set token="affinity_val">0.95</set>
    <set token="parameter">k=5</set>
    <set token="form.parameter">k=5</set>
    <set token="spectral_k">k=5</set>
    <set token="affinity_damping">damping=0.95</set>
    <set token="vis_co-occurrence_graph">1</set>-->
    <set token="i18n_errorPattern" i18ntag="">Fehlerbild</set>
    <set token="i18n_errorClasses" i18ntag="">Fehlerklassen</set>
    <set token="i18n_save" i18ntag="">Speichern</set>
    <set token="i18n_errorPatternDescription" i18ntag="">Fehlerbild_Beschreibung</set>
    <set token="i18n_errorDescription" i18ntag="">Fehlerbeschreibung</set>
  </init>
  <search id="fehlerbilder_search">
    <query>
      <![CDATA[
| loadjob savedsearch="nobody:iqp:ql_fehlerbilder_30_tage" | search value>0.2 OR NOT value=*
| join ID type=left 
        `comment("Suche nur IDs mit dem Stichwort")`
        [ inputlookup lkup_fehlerklasse 
        | rename ErrorCodeDec AS ft_ErrorCodeDec adviseText AS ft_adviseText description AS ft_description errorText AS ft_errorText param1 AS ft_param1 param2 AS ft_param2 pruefumfangName AS ft_pruefumfangName resultName AS ft_resultName resultValueStr AS ft_resultValueStr testStepName AS ft_testStepName
        | foreach ft_* [eval <<FIELD>>=if(<<FIELD>>="-","",<<FIELD>>."; ")]
        | eval _raw=ft_pruefumfangName.ft_testStepName.ft_param1.ft_param2.ft_resultName.ft_description.ft_resultValueStr.ft_ErrorCodeDec.ft_errorText.ft_adviseText
        | search $textfilter$ | table ID | eval ID="ID_".ID | eval keyword=1]
`comment("Suche nur die ersten Gruppen")`
| eventstats values(eval(if(keyword=1,group,null()))) as first_groups | eval first_groups=mvindex(first_groups,0,$maxgroups$-1)
| eval first_ids=if(group=first_groups,ID,null()) | eventstats values(first_ids) as first_ids
| where ID=first_ids OR source=first_ids OR target=first_ids | fields - first_groups
| appendpipe [ where NOT source=first_ids | search source=* |dedup source | rename source as ID |eval group=-1 | table ID group ]
| appendpipe [ where NOT target=first_ids | search target=* |dedup target | rename target as ID |eval group=-1 | table ID group ]
| dedup keepempty=true ID
| fields - first_ids
        ]]>
      </query>
    <earliest>$time.earliest$</earliest>
    <latest>$time.latest$</latest>
  </search>
  <label>QL - Fehlerbilder</label>
  <fieldset submitButton="true">
    <input type="time" searchWhenChanged="false" token="time">
      <label>Zeitauswahl</label>
      <default>
        <earliest>-30d@d</earliest>
        <latest>now</latest>
      </default>
    </input>
    <!--<input type="dropdown" token="algo" searchWhenChanged="false">
      <label>Algorithmus</label>
      <choice value="AffinityPropagation">Affinity Propagation</choice>
      <choice value="SpectralClusteringPrecomputed">Spectral Clustering</choice>
      <default>SpectralClusteringPrecomputed</default>
      <initialValue>SpectralClusteringPrecomputed</initialValue>
      <change>
        <condition label="Affinity Propagation">
          <set token="affinity">True</set>
          <eval token="form.parameter">$affinity_damping$</eval>
          <unset token="spectral"></unset>
          <eval token="parameter2">damping=0.95</eval>
          <eval token="form.parameter2">0.95</eval>
          <eval token="parameter2_label">Damping factor - optional</eval>
          <eval token="parameter2_default">0.95</eval>
          <eval token="parameter2_initialValue">damping=0.95</eval>
          <eval token="parameter2_prefix">damping=</eval>
        </condition>
        <condition label="Spectral Clustering">
          <set token="spectral">True</set>
          <eval token="form.parameter">$spectral_k$</eval>
          <unset token="affinity"></unset>
          <eval token="parameter2">k=$spectral_val$</eval>
          <eval token="form.parameter2">$spectral_val$</eval>
          <eval token="parameter2_label">k (Anzahl Cluster) - optional</eval>
          <eval token="parameter2_default">$spectral_val$</eval>
          <eval token="parameter2_initialValue">k=$spectral_val$</eval>
          <eval token="parameter2_prefix">k=</eval>
        </condition>
      </change>
    </input>-->
    <!--<input type="text" token="spectral_k" depends="$spectral$" searchWhenChanged="false">
      <label>k (Anzahl Cluster) - optional</label>
      <default>5</default>
      <initialValue>k=5</initialValue>
      <prefix>k=</prefix>
      <change>
        <set token="form.parameter">k=$value$</set>
      </change>
    </input>-->
    <!--<input type="text" token="affinity_damping" depends="$affinity$" searchWhenChanged="false">
      <label>Damping factor - optional</label>
      <default>0.95</default>
      <initialValue>damping=0.95</initialValue>
      <prefix>damping=</prefix>
      <change>
        <set token="form.parameter">damping=$value$</set>
      </change>
    </input>-->
    <!--<input type="text" token="parameter" id="parameter" searchWhenChanged="false">
      <label>Parameter - debug</label>
    </input>-->
    <input type="text" token="textfilter" id="input_textfilter" searchWhenChanged="false">
      <label>Fehlertext enthält</label>
      <default>*</default>
    </input>
    <input type="text" token="maxgroups" id="input_maxgroups" searchWhenChanged="false">
      <label>maximale Anzahl von Fehlerbildern</label>
      <default>10</default>
    </input>
    <input type="dropdown" token="vis" searchWhenChanged="false">
      <label>Visualisierung</label>
      <choice value="co-occurrence_graph">Co-Occurrence-Graph</choice>
      <choice value="force_directed_graph">Force-directed-Graph</choice>
      <default>Co-Occurrence-Graph</default>
      <initialValue>co-occurrence_graph</initialValue>
      <change>
        <condition label="Co-Occurrence-Graph">
          <set token="vis_co-occurrence_graph">1</set>
          <unset token="vis_force_directed_graph"></unset>
        </condition>
        <condition label="Force-directed-Graph">
          <set token="vis_force_directed_graph">1</set>
          <unset token="vis_co-occurrence_graph"></unset>
        </condition>
      </change>
    </input>
  </fieldset>
  <row>
    <panel rejects="$vis$">
      <title>Bitte Formular ausfüllen</title>
      <html>
        <span class="i18n" i18ntag="">Bitte füllen Sie das Formular aus, um Fehlerbilder anzuzeigen.</span>
      </html>
    </panel>
  </row>
  <row>
    <panel depends="$vis$">
      <table id="table_fehlerbilder">
        <title>Fehlerbilder</title>
        <search base="fehlerbilder_search">
          <query>
            <![CDATA[
  search group=*
| rename ID as Fehlerklasse, group as Fehlerbild
| eval FehlerID = substr(Fehlerklasse,4)
| lookup lkup_fehlerklasse ID as FehlerID OUTPUT ErrorCodeDec AS ft_ErrorCodeDec adviseText AS ft_adviseText description AS ft_description errorText AS ft_errorText param1 AS ft_param1 param2 AS ft_param2 pruefumfangName AS ft_pruefumfangName resultName AS ft_resultName resultValueStr AS ft_resultValueStr testStepName AS ft_testStepName
| foreach ft_* [eval <<FIELD>>=if(<<FIELD>>="-","",<<FIELD>>."; ")]
| eval fehlerklasse_string=Fehlerklasse." - ".ft_pruefumfangName.ft_testStepName.ft_param1.ft_param2.ft_resultName.ft_description.ft_resultValueStr.ft_ErrorCodeDec.ft_errorText.ft_adviseText
| eval Speichern = Fehlerbild
| table Fehlerbild fehlerklasse_string Speichern
| mvcombine delim=";" fehlerklasse_string
| eval Fehlerbild=if(Fehlerbild=-1,"weitere Fehler",Fehlerbild)
| sort Fehlerbild
| rename 
  Fehlerbild as "$i18n_errorPattern$"
  fehlerklasse_string as "$i18n_errorClasses$"
  Speichern as "$i18n_save$"
            ]]>
          </query>
        </search>
        <!--<option name="drilldown">row</option>-->
        <!--drilldown>
          <set token="save_fehlerbild">$row.Fehlerbild$</set>
        </drilldown-->
      </table>
    </panel>
    <panel depends="$vis$, $vis_co-occurrence_graph$">
      <title>Matrixdarstellung der Fehlerbilder</title>
      <viz type="viz_co-occurrence_graph_app.co-occurrence_graph">
        <search base="fehlerbilder_search">
          <query/>
        </search>
        <option name="height">820</option>
        <option name="viz_co-occurrence_graph_app.co-occurrence_graph.order">group</option>
      </viz>
    </panel>
    <panel depends="$vis$, $vis_force_directed_graph$">
      <title>Graphendarstellung der Fehlerbilder</title>
      <viz type="viz_force_directed_graph_app.force_directed_graph">
        <search base="fehlerbilder_search">
          <query/>
        </search>
        <option name="height">620</option>
      </viz>
    </panel>
  </row>
  <row>
    <panel id="saved_error_patterns">
      <title>Gespeicherte Fehlerbilder</title>
      <table>
        <search>
          <query><![CDATA[
| inputlookup lkup_fehlerbilder
| makemv delim=";" Fehlerklassen | streamstats count as id | mvexpand Fehlerklassen
| eval FehlerID = substr(Fehlerklassen,4)
| lookup lkup_fehlerklasse ID as FehlerID OUTPUT ErrorCodeDec AS ft_ErrorCodeDec adviseText AS ft_adviseText description AS ft_description errorText AS ft_errorText param1 AS ft_param1 param2 AS ft_param2 pruefumfangName AS ft_pruefumfangName resultName AS ft_resultName resultValueStr AS ft_resultValueStr testStepName AS ft_testStepName
| foreach ft_* [eval <<FIELD>>=if(<<FIELD>>="-","",<<FIELD>>."; ")]
| eval Fehlerbeschreibung=Fehlerklassen." - ".ft_pruefumfangName.ft_testStepName.ft_param1.ft_param2.ft_resultName.ft_description.ft_resultValueStr.ft_ErrorCodeDec.ft_errorText.ft_adviseText
| table Fehlerbild_Beschreibung Fehlerbeschreibung
| mvcombine delim=";" Fehlerbeschreibung
| sort Fehlerbild_Beschreibung
| rename 
  Fehlerbild_Beschreibung AS "$i18n_errorPatternDescription$"
  Fehlerbeschreibung AS "$i18n_errorDescription$"
            ]]> 
          </query>
          <earliest>0</earliest>
          <latest></latest>
        </search>
        <option name="drilldown">none</option>
      </table>
      <html>
        <div style="display:inline">
          <button id="btn_list_fehlerbilder" class="btn i18n" style="padding-left:12px" i18ntag="">Editoransicht</button>
        </div>
      </html>
    </panel>
  </row>
</form>